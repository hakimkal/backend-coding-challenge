(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

/******************************************************************************************

Alchemytec Coding Test for Expenses Back End

******************************************************************************************/

// App files

require("./partials.js");
require("./expenses/main.js");

// Declare app level module which depends on filters, and services
var app = angular.module("alcExpenses", ["alcShared", "codingtest.partials", "expenses.controllers"]);

app.run(["$rootScope", function ($rootScope) {
	// Basic config options
	var gulpBuildConfig = {};
	$rootScope.config = angular.extend({ angular: angular.version.full }, gulpBuildConfig);

	// Headings used by the menu bars
	$rootScope.mainTitle = "";
	$rootScope.mainHeading = "";

	// Sections of content are used for bookmark navigation
	$rootScope.contentSections = [];

	// App sections are distinct areas of the website
	// These will ultimately be retrieved from the server
	$rootScope.appSections = $rootScope.appSections || [];

	// Initialise tab sections
	$rootScope.tabSections = $rootScope.tabSections || {};
	$rootScope.currentSection = [];
	$rootScope.selectTabSection = function (currentSection, selectedIndex) {
		if ($rootScope.tabSections[currentSection]) {
			$rootScope.currentSection = angular.copy($rootScope.tabSections[currentSection]);

			for (var u = 0; u < $rootScope.currentSection.length; u++) {
				if (u == selectedIndex) $rootScope.currentSection[u].active = true;else $rootScope.currentSection[u].active = false;
			}
		}
	};
}]);

// Bootstrap the app
$(document).ready(function () {
	angular.bootstrap("body", ["alcExpenses"]);
});

},{"./expenses/main.js":3,"./partials.js":4}],2:[function(require,module,exports){
'use strict';

/******************************************************************************************

Expenses controller

******************************************************************************************/

var app = angular.module('expenses.controller', []);

app.controller('ctrlExpenses', ['$rootScope', '$scope', 'config', 'restalchemy', function ExpensesCtrl($rootScope, $scope, $config, $restalchemy) {
	// Update the headings
	$rootScope.mainTitle = 'Expenses';
	$rootScope.mainHeading = 'Expenses';

	// Update the tab sections
	$rootScope.selectTabSection('expenses', 0);

	var restExpenses = $restalchemy.init({ root: $config.apiroot }).at('expenses');

	$scope.dateOptions = {
		changeMonth: true,
		changeYear: true,
		dateFormat: 'dd/mm/yy'
	};

	var loadExpenses = function loadExpenses() {
		// Retrieve a list of expenses via REST
		restExpenses.get().then(function (expenses) {
			$scope.expenses = expenses;
		});
	};

	$scope.saveExpense = function () {
		if ($scope.expensesform.$valid) {
			// Post the expense via REST

			restExpenses.post($scope.newExpense).then(function () {
				// Reload new expenses list
				loadExpenses();
			});
		}
	};

	$scope.$watchGroup(['newExpense.amount'], function () {
		if ($scope.newExpense.amount !== undefined) {
			var strAmount = $scope.newExpense.amount;
			var s = strAmount.split(/[EUR]| â‚¬ |\u20AC/gi);

			if (s.length > 1) {
				//remove  EUR from amount if any
				var theAmount = parseFloat(s.join('').trim());

				s = theAmount;
			}
		}
		$scope.newExpense.vat = (s - s / 1.2).toFixed(2);
	});
	$scope.clearExpense = function () {
		$scope.newExpense = {};
	};

	// Initialise scope variables
	loadExpenses();
	$scope.clearExpense();
}]);

},{}],3:[function(require,module,exports){
"use strict";

/******************************************************************************************

Tasks main

******************************************************************************************/

require("./expenses-controller.js");

var app = angular.module("expenses.controllers", ["expenses.controller"]);

app.config(["$routeProvider", function ($routeProvider) {
	// Labour analysis routes
	$routeProvider.when("/expenses", { templateUrl: "codingtest/expenses-content.html" });

	$routeProvider.otherwise({ redirectTo: "/expenses" });
}]);

app.run(["$rootScope", function ($rootScope) {
	// Add app button
	$rootScope.appSections = $rootScope.appSections || [];
	$rootScope.appSections.push({ title: "Expenses", image: "img/icon-generic.png", app: "expenses" });

	// Configure tab sections
	$rootScope.tabSections = $rootScope.tabSections || {};
	$rootScope.tabSections.expenses = [{ title: "Expenses", app: "expenses" }];
}]);

},{"./expenses-controller.js":2}],4:[function(require,module,exports){
"use strict";

angular.module("codingtest.partials", []).run(["$templateCache", function (e) {
  e.put("codingtest/expenses-content.html", '<div ng-controller="ctrlExpenses"><h2>Expenses</h2><div bookmarklist id="bookmarks" class="section-list"></div><h3>Add an expense</h3><form name="expensesform"><ul><li><label>Date</label> <input type="text" ng-required="true" ng-model="newExpense.date" ui-date="dateOptions" placeholder="dd/mm/yyyy"></li><li><label>Amount</label> <input type="text" ng-pattern-restrict="^$|^[A-Za-z0-9]+" ng-required="true" ng-model="newExpense.amount" placeholder="00.00"></li><li><label>VAT(20%)</label> <input type="text" ng-required="false" readonly="true" ng-model="newExpense.vat" placeholder="00.00"></li><li><label>Reason</label> <textarea at-auto-resize ng-required="true" ng-model="newExpense.reason" ng-trim="false" placeholder="why oh why?"></textarea></li><li><label></label> <button ng-click="saveExpense()" class="solid">Save Expense</button> <button ng-click="clearExpense()">cancel</button></li></ul></form><h3>Submitted expenses</h3><div class="list-table expenses-data"><div class="header-row"><div class="col-4">Date</div><div class="col-4 figures">Amount (inc. VAT)</div><div class="col-2 figures">VAT</div><div class="col-15">Reason</div></div><div ng-repeat="expense in expenses" class="body-row"><div class="col-4">{{expense.date | date:\'dd MMM yyyy\'}}</div><div class="col-4 figures">{{expense.amount | currency:"&pound;"}}</div><div class="col-2 figures">{{expense.vat | currency:"&pound;"}}</div><div class="col-15">{{expense.reason}}</div></div></div></div>');
}]);

},{}]},{},[1])

//# sourceMappingURL=../maps/codingtest.min.js.map
